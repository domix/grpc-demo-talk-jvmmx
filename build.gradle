buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath 'io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE'
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
    classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE'
    classpath 'com.bmuschko:gradle-docker-plugin:3.2.0'
  }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'com.google.protobuf'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.ben-manes.versions'

ext {
  grpcVersion = '1.7.0'
  protobufVersion = '3.4.0'
  protoGenDir = file('generated-src/')
  springCloudVersion = 'Dalston.SR4'
}

repositories {
  jcenter()
}

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
  imports {
    mavenBom 'io.spring.platform:platform-bom:Brussels-SR5'
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }

  dependencies {
    dependencySet(group: 'io.grpc', version: grpcVersion) {
      entry 'grpc-all'
      entry 'grpc-netty'
      entry 'grpc-protobuf'
      entry 'grpc-stub'
      entry 'grpc-services'
    }
    dependency "com.google.protobuf:protobuf-java:$protobufVersion"
  }

}

jar {
  baseName = 'service'
  version = ''
}

sourceSets {
  main {
    proto {
      srcDir 'src/main/proto'
    }
    java {
      srcDir "${protoGenDir}/main/java"
    }
  }
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:$protobufVersion"
  }

  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
    }
  }

  generateProtoTasks {
    ofSourceSet('main').each { task ->
      task.builtins {
        java {
          outputSubDir = 'java'
        }
      }
      task.plugins {
        grpc {
          outputSubDir = 'java'
        }
      }
    }
  }
  generatedFilesBaseDir = ext.protoGenDir
}

task cleanProtoGen {
  doFirst {
    delete "${protoGenDir}"
  }
}

clean.dependsOn cleanProtoGen

idea {
  module {
    sourceDirs += file('./src/main/proto')
    sourceDirs += file("${protoGenDir}")
  }
}

dependencies {
  compile 'io.grpc:grpc-stub'
  compile 'io.grpc:grpc-protobuf'
  compile 'io.grpc:grpc-netty'
  compile 'org.lognet:grpc-spring-boot-starter:2.1.0'
  compile 'org.springframework.boot:spring-boot-starter-web'
  compile 'org.springframework.boot:spring-boot-starter-actuator'  

  compileOnly 'org.projectlombok:lombok'

  testCompile 'org.codehaus.groovy:groovy-all:2.4.12'
  testCompile 'org.springframework.boot:spring-boot-starter-test'
  testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
  testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4'
}
